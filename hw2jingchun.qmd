---
title: "Homework 2"
author: "[Jingchun Zhang]{style='background-color: yellow;'}"
toc: true
title-block-banner: true
title-block-style: default
format: pdf
# format: pdf
---

[Link to the Github repository](https://github.com/STAT380/hw2.git)

---

::: {.callout-important style="font-size: 0.8em;"}
## Due: Feb 9, 2024 @ 11:59pm

Please read the instructions carefully before submitting your assignment.

1. This assignment requires you to only upload a `PDF` file on Canvas
1. Don't collapse any code cells before submitting. 
1. Remember to make sure all your code output is rendered properly before uploading your submission.

⚠️ Please add your name to the author information in the frontmatter before submitting your assignment ⚠️
:::

For this assignment, we will be using the [Abalone dataset](http://archive.ics.uci.edu/ml/datasets/Abalone) from the UCI Machine Learning Repository. The dataset consists of physical measurements of abalone (a type of marine snail) and includes information on the age, sex, and size of the abalone.

We will be using the following libraries:

```{r}
library(readr)
library(tidyr)
library(ggplot2)
library(dplyr)
library(purrr)
library(cowplot)
```

<br><br><br><br>
---

## Question 1
::: {.callout-tip}
## 30 points
EDA using `readr`, `tidyr` and `ggplot2`
:::

###### 1.1 (5 points)

Load the "Abalone" dataset as a tibble called `abalone` using the URL provided below. The `abalone_col_names` variable contains a vector of the column names for this dataset (to be consistent with the R naming pattern). Make sure you read the dataset with the provided column names. 

```R
library(readr)
url <- "http://archive.ics.uci.edu/ml/machine-learning-databases/abalone/abalone.data"

abalone_col_names <- c(
  "sex", 
  "length", 
  "diameter", 
  "height", 
  "whole_weight", 
  "shucked_weight", 
  "viscera_weight", 
  "shell_weight", 
  "rings"
)

abalone <- ... # Insert your code here
```
```{r}
library(readr)
url <- "http://archive.ics.uci.edu/ml/machine-learning-databases/abalone/abalone.data"

abalone_col_names <- c(
  "sex", 
  "length", 
  "diameter", 
  "height", 
  "whole_weight", 
  "shucked_weight", 
  "viscera_weight", 
  "shell_weight", 
  "rings"
)

abalone <- read_csv(url, col_names = abalone_col_names)
```


---

###### 1.2 (5 points)

Remove missing values and `NA`s from the dataset and store the cleaned data in a tibble called `df`. How many rows were dropped?

```R
df <- ... # Insert your code here
```
```{r}
df <- na.omit(abalone)

rows_dropped <- nrow(abalone) - nrow(df)

print(rows_dropped)

```
Ans: 0 tows were dropped




---

##### 1.3 (5 points)

Plot histograms of all the quantitative variables in a **single plot** [^footnote_facet_wrap]

```R
... # Insert your code here
```
```{r}
library(ggplot2)

df_long <- gather(df, key = "variable", value = "value", -sex)

ggplot(df_long, aes(x = value)) +
  geom_histogram(bins = 30, fill = "blue", color = "black") +
  facet_wrap(~variable, scales = "free") +
  theme_minimal() +
  labs(title = "Histograms of Quantitative Variables", 
       x = "Value", 
       y = "Frequency")

```
---

##### 1.4 (5 points)

Create a boxplot of `length` for each `sex` and create a violin-plot of of `diameter` for each `sex`. Are there any notable differences in the physical appearences of abalones based on your analysis here?

```R
... # Insert your code for boxplot here
```

```R
... # Insert your code for violinplot here
```
```{r}
# Boxplot of length for each sex
ggplot(df, aes(x = sex, y = length)) +
  geom_boxplot(fill = "lightblue", color = "darkblue") +
  labs(title = "Boxplot of Length for Each Sex", 
       x = "Sex", 
       y = "Length") +
  theme_minimal()

# Violin plot of diameter for each sex
ggplot(df, aes(x = sex, y = diameter)) +
  geom_violin(fill = "lightgreen", color = "darkgreen") +
  labs(title = "Violin Plot of Diameter for Each Sex", 
       x = "Sex", 
       y = "Diameter") +
  theme_minimal()

```

Ans:From the boxplot and violin plot, it is evident that infant abalones are smaller in both length and diameter compared to adult females and males, with adult abalones showing similar size distributions between the sexes. However, females appear slightly larger on average, as indicated by a higher median length and a broader distribution of diameters. The presence of outliers in both plots suggests that while most abalones conform to a common size range for their sex, some individuals deviate significantly from this norm. Overall, these visual analyses reveal subtle but notable size differences between the sexes and more pronounced differences when comparing adults to infants.


---

###### 1.5  (5 points)

Create a scatter plot of `length` and `diameter`, and modify the shape and color of the points based on the `sex` variable. Change the size of each point based on the `shell_wight` value for each observation. Are there any notable anomalies in the dataset?



```R
... # Insert your code here
```
```{r}
ggplot(df, aes(x = length, y = diameter, color = sex, shape = sex, size = shell_weight)) +
  geom_point(alpha = 0.6) + 
  scale_size_continuous(range = c(1, 6)) +  
  labs(title = "Scatter Plot of Length vs Diameter",
       x = "Length",
       y = "Diameter",
       size = "Shell Weight") +
  theme_minimal() +
  theme(legend.position = "bottom") 
```

Ans:The scatter plot depicting the relationship between abalone length and diameter shows a consistent positive correlation for all sexes, with no significant disparities between them. Point sizes, representing shell_weight, scale proportionally with abalone dimensions, suggesting a uniform growth pattern without any evident anomalies. The overlay of points across sexes indicates that length, diameter, and shell_weight are comparable across the sexes, with no outliers suggesting unusual growth characteristics. This uniformity in growth across the sexes implies a homogeneity in physical traits among the abalones in the dataset.

---

###### 1.6 (5 points)

For each `sex`, create separate scatter plots of `length` and `diameter`. For each plot, also add a **linear** trendline to illustrate the relationship between the variables. Use the `facet_wrap()` function in R for this, and ensure that the plots are vertically stacked **not** horizontally. You should end up with a plot that looks like this: [^footnote_plot_facet]


```R
... # Insert your code here
```
```{r}
ggplot(df, aes(x = length, y = diameter)) +
  geom_point(aes(color = sex), alpha = 0.5) +  
  geom_smooth(method = "lm", aes(color = sex), se = FALSE) +  
  facet_wrap(~sex, ncol = 1) +  
  labs(title = "Scatter Plot of Length vs Diameter with Linear Trendlines",
       x = "Length",
       y = "Diameter") +
  theme_minimal() +
  theme(legend.position = "none") 
```


<br><br><br><br>
<br><br><br><br>
---

## Question 2
::: {.callout-tip}
## 40 points
More advanced analyses using `dplyr`, `purrrr` and `ggplot2`
:::


---

###### 2.1 (10 points)

Filter the data to only include abalone with a length of at least $0.5$ meters. Group the data by `sex` and calculate the mean of each variable for each group. Create a bar plot to visualize the mean values for each variable by `sex`.


```R
df %>% ... # Insert your code here
```
```{r}
# Filtering and calculating mean for each variable by sex with updated syntax
abalone_means <- df %>%
  filter(length >= 0.5) %>%
  group_by(sex) %>%
  summarise(across(everything(), ~ mean(.x, na.rm = TRUE)))  # Updated syntax

# Reshaping data for plotting
abalone_means_long <- pivot_longer(abalone_means, -sex, names_to = "variable", values_to = "mean_value")

# Creating a bar plot for mean values of each variable by sex
ggplot(abalone_means_long, aes(x = sex, y = mean_value, fill = variable)) +
  geom_bar(stat = "identity", position = "dodge") +
  facet_wrap(~variable, scales = "free_y") +
  labs(title = "Mean Values of Variables by Sex",
       x = "Sex",
       y = "Mean Value") +
  theme_minimal() +
  theme(legend.position = "bottom")

print(abalone_means)
```



---

###### 2.2 (15 points)

Implement the following in a **single command**:

1. Temporarily create a new variable called `num_rings` which takes a value of:

  * `"low"` if `rings < 10`
  * `"high"` if `rings > 20`, and
  * `"med"` otherwise

2. Group `df` by this new variable and `sex` and compute `avg_weight` as the average of the `whole_weight + shucked_weight + viscera_weight + shell_weight` for each combination of `num_rings` and `sex`. 

3. Use the `geom_tile()` function to create a tile plot of `num_rings` vs `sex` with the color indicating of each tile indicating the `avg_weight` value. 


```R
df %>% ... # Insert your code here
```
```{r}
df %>%
  mutate(num_rings = case_when(
    rings < 10 ~ "low",
    rings > 20 ~ "high",
    TRUE ~ "med"
  )) %>%
  group_by(num_rings, sex) %>%
  summarise(avg_weight = mean(whole_weight + shucked_weight + viscera_weight + shell_weight, na.rm = TRUE),
            .groups = "drop") %>%  # Use the .groups argument to drop the grouping
  ggplot(aes(x = sex, y = num_rings, fill = avg_weight)) +
    geom_tile() +
    scale_fill_gradient(low = "blue", high = "red") +
    labs(title = "Tile Plot of num_rings vs sex", 
         x = "Sex", 
         y = "Number of Rings Category", 
         fill = "Average Weight") +
    theme_minimal()

```




---

###### 2.3 (5 points)

Make a table of the pairwise correlations between all the numeric variables rounded to 2 decimal points. Your final answer should look like this [^footnote_table]


```R
df %>% ... # Insert your code here
```
```{r}
correlation_table <- df %>%
  select(where(is.numeric)) %>%  # Select only numeric variables
  cor() %>%  # Calculate correlation matrix
  round(2)  # Round to two decimal points

# Print the correlation table
print(correlation_table)
```



---

###### 2.4 (10 points)

Use the `map2()` function from the `purrr` package to create a scatter plot for each _quantitative_ variable against the number of `rings` variable. Color the points based on the `sex` of each abalone. You can use the `cowplot::plot_grid()` function to finally make the following grid of plots.

:::{.content-visible when-format="html"}
![](images/plot_grid.png)
:::


```R
... # Insert your code here
```
```{r}
library(purrr)
library(cowplot)

# Select only quantitative variables (assuming these are all numeric variables except 'rings')
quantitative_vars <- df %>% select(where(is.numeric)) %>% select(-rings)

# List of variable names for plotting
var_names <- names(quantitative_vars)

# Create a list of plots
plots <- map2(var_names, list(df$rings), ~ggplot(df, aes_string(x = .y, y = .x, color = 'sex')) +
  geom_point(alpha = 0.5) +
  labs(x = "Rings", y = .x) +
  theme_minimal() +
  theme(legend.position = "none"))

# Combine the plots into a grid
plot_grid(plotlist = plots, ncol = 3)
```



<br><br><br><br>
<br><br><br><br>
---

## Question 3
::: {.callout-tip}
## 30 points

Linear regression using `lm`
:::

---

###### 3.1 (10 points)

Perform a simple linear regression with `diameter` as the covariate and `height` as the response. Interpret the model coefficients and their significance values. 


```R
... # Insert your code here
```
```{r}
# Perform linear regression
model <- lm(height ~ diameter, data = df)

# Get the summary of the model
model_summary <- summary(model)

# Print the summary
print(model_summary)

```

Ans:
The linear regression model examining the relationship between height (response variable) and diameter (covariate) in abalones reveals a significant positive relationship. The model's intercept, at approximately -0.0038, suggests the estimated height at zero diameter, albeit with limited practical significance. More importantly, the diameter coefficient of about 0.3514 indicates that for each unit increase in diameter, height increases by approximately 0.3514 units, a relationship underscored by its very low p-value (practically zero), denoting strong statistical significance. The model's high R-squared value of 0.695 suggests that 69.5% of the variance in height is explained by diameter, indicating a good fit.


---

###### 3.2 (10 points)

Make a scatterplot of `height` vs `diameter` and plot the regression line in `color="red"`. You can use the base `plot()` function in R for this. Is the linear model an appropriate fit for this relationship? Explain. 


```R
... # Insert your code here
```
```{r}
plot(df$diameter, df$height, main = "Scatterplot of Height vs Diameter", 
     xlab = "Diameter", ylab = "Height", pch = 19, col = "blue")

model <- lm(height ~ diameter, data = df)

abline(model, col = "red")

```

Ans:
The scatter plot of height vs diameter for abalones displays a positive linear relationship, with the regression line in red fitting well through the central concentration of data points. This indicates that a linear model is generally appropriate for describing the relationship between these variables. Although there is a visible outlier with an abnormally high height and some dispersion at the extremes of the diameter range, the majority of the data conforms to the linear trend suggested by the regression line. The plot suggests that diameter is a good predictor of height, aligning with the earlier regression analysis that reported a high R-squared value, although a residual analysis would be needed for a complete assessment of the model's appropriateness.


---

###### 3.3  (10 points)

Suppose we have collected observations for "new" abalones with `new_diameter` values given below. What is the expected value of their `height` based on your model above? Plot these new observations along with your predictions in your plot from earlier using `color="violet"`

```R

new_diameters <- c(
  0.15218946,
  0.48361548,
  0.58095513,
  0.07603687,
  0.50234599,
  0.83462092,
  0.95681938,
  0.92906875,
  0.94245437,
  0.01209518
)


... # Insert your code here. 
```

```{r}

new_diameters <- c(
  0.15218946,
  0.48361548,
  0.58095513,
  0.07603687,
  0.50234599,
  0.83462092,
  0.95681938,
  0.92906875,
  0.94245437,
  0.01209518
)

new_data <- data.frame(diameter = new_diameters)

predicted_heights <- predict(model, newdata = new_data)

expected_values <- data.frame(new_diameter = new_diameters, expected_height = predicted_heights)
print(expected_values)

plot(df$diameter, df$height, main = "Scatterplot of Height vs Diameter with New Predictions",
     xlab = "Diameter", ylab = "Height", pch = 19, col = "blue")
abline(model, col = "red")

points(new_diameters, predicted_heights, col = "violet", pch = 19)
```




:::{.hidden unless-format="pdf"}
\pagebreak
:::

<br><br><br><br>
<br><br><br><br>
---


# Appendix

::: {.callout-note collapse="true"}
## Session Information

Print your `R` session information using the following command

```{R}
sessionInfo()
```

:::

[^footnote_facet_wrap]:
  You can use the `facet_wrap()` function for this. Have a look at its documentation using the help console in R

[^footnote_plot_facet]:
  Plot example for 1.6<br>
  [![](images/lines.png){style="height: 5em;"}]{.content-visible when-format="html"}

[^footnote_table]:
  Table for 2.3<br>

:::{.content-visible when-format="html"}

| length| diameter| height| whole_weight| shucked_weight| viscera_weight| shell_weight| rings|
|:--------------|------:|--------:|------:|------------:|--------------:|--------------:|------------:|-----:|
|length         |   1.00|     0.99|   0.83|         0.93|           0.90|           0.90|         0.90|  0.56|
|diameter       |   0.99|     1.00|   0.83|         0.93|           0.89|           0.90|         0.91|  0.57|
|height         |   0.83|     0.83|   1.00|         0.82|           0.77|           0.80|         0.82|  0.56|
|whole_weight   |   0.93|     0.93|   0.82|         1.00|           0.97|           0.97|         0.96|  0.54|
|shucked_weight |   0.90|     0.89|   0.77|         0.97|           1.00|           0.93|         0.88|  0.42|
|viscera_weight |   0.90|     0.90|   0.80|         0.97|           0.93|           1.00|         0.91|  0.50|
|shell_weight   |   0.90|     0.91|   0.82|         0.96|           0.88|           0.91|         1.00|  0.63|
|rings          |   0.56|     0.57|   0.56|         0.54|           0.42|           0.50|         0.63|  1.00|

:::
